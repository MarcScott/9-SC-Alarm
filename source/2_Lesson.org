#+STARTUP:indent
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="css/styles.css"/>
#+HTML_HEAD_EXTRA: <link href='http://fonts.googleapis.com/css?family=Ubuntu+Mono|Ubuntu' rel='stylesheet' type='text/css'>
#+HTML_HEAD_EXTRA: <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js" type="text/javascript"></script>
#+HTML_HEAD_EXTRA: <script src="js/navbar.js" type="text/javascript"></script>
#+OPTIONS: f:nil author:nil num:1 creator:nil timestamp:nil toc:nil

#+TITLE: The Drawer Alarm
#+AUTHOR: Marc Scott

#+BEGIN_HTML
  <div class="github-fork-ribbon-wrapper left">
    <div class="github-fork-ribbon">
      <a href="https://github.com/MarcScott/9-SC-Alarm">Fork me on GitHub</a>
    </div>
  </div>
<div id="stickyribbon">
    <ul>
      <li><a href="1_Lesson.html">Week1</a></li>
      <li><a href="2_Lesson.html">Week2</a></li>
      <li><a href="3_Lesson.html">Week3</a></li>
      <li><a href="4_Lesson.html">Week4</a></li>
      <li><a href="5_Lesson.html">Week5</a></li>
      <li><a href="6_Lesson.html">Week6</a></li>
      <li><a href="assessment.html">Assessment</a></li>
    </ul>
  </div>
#+END_HTML

* COMMENT Use as a template
:PROPERTIES:
:HTML_CONTAINER_CLASS: activity
:END:
** Learn It
:PROPERTIES:
:HTML_CONTAINER_CLASS: learn
:END:
** Research It
:PROPERTIES:
:HTML_CONTAINER_CLASS: research
:END:

** Design It
:PROPERTIES:
:HTML_CONTAINER_CLASS: design
:END:

** Build It
:PROPERTIES:
:HTML_CONTAINER_CLASS: build
:END:

** Test It
:PROPERTIES:
:HTML_CONTAINER_CLASS: test
:END:

** Run It
:PROPERTIES:
:HTML_CONTAINER_CLASS: run
:END:

** Document It
:PROPERTIES:
:HTML_CONTAINER_CLASS: document
:END:

** Code It
:PROPERTIES:
:HTML_CONTAINER_CLASS: code
:END:

** Program It
:PROPERTIES:
:HTML_CONTAINER_CLASS: program
:END:

** Try It
:PROPERTIES:
:HTML_CONTAINER_CLASS: try
:END:

** Badge It
:PROPERTIES:
:HTML_CONTAINER_CLASS: badge
:END:

** Save It
:PROPERTIES:
:HTML_CONTAINER_CLASS: save
:END:

* Setting up sensors.
:PROPERTIES:
:HTML_CONTAINER_CLASS: activity
:END:
** Learn It
:PROPERTIES:
:HTML_CONTAINER_CLASS: learn
:END:
- Like many of the projects you have completed in the past, this one will use a GENIE C08 microcontroller.
- GENIE chips can recieve both analogue and digital signals.
** Learn It
:PROPERTIES:
:HTML_CONTAINER_CLASS: learn
:END:
- Digital signals are binary in nature.
- There are many ways to describe the signal - =On/Off=, =High/Low=, =1/0=.
- Analogue signals vary over a range of values.
** Try It
:PROPERTIES:
:HTML_CONTAINER_CLASS: try
:END:
- Let's build a simple circuit to try and get a GENIE chip to detect an analogue signal.
- Use CircuitWizard to build the circuit shown below
[[file:img/analogueCirc1.png]]
- This circuit has an LDR connected to the analogue input of the GENIE chip.
- A light dependent resistor is a resistor that responds to light.
  - When light levels are high, the resistance is low.
  - When light levels are low, the resistance is high.
- In theory we should be able to use the GENIE chip to detect light levels.
- So that we can simulate the circuit, we need to give the GENIE chip a program.
- Use this loop.
[[file:img/analogueCirc2.png]]
- Microcontrollers can't detect resistances, they only read voltages. Let's have a look at the voltage drop between the input pin and ground for out circuit.
- Recreate this circuit in CircuitWizard and have a look at the voltage differences that are generated when the light levels reaching the LDR are altered.
file:img/analogueCirc4.gif
- As you can see, altering the light levels at the LDR has a minimal effect on the voltage at the pin. While we could use a setup like this, we'd have a very unsensitive detector.
** Learn It
:PROPERTIES:
:HTML_CONTAINER_CLASS: learn
:END:
- There's a way to provide a larger voltage differntial at the pin, by adding a single resistor to the circuit.
- We're going to create something called a potential divider.
- The visualisation below shows a standard set up for a potential divider. You can use the slider to alter the resistance of the LDR, and type in values for the resistor beneath it. Look at what happens to the voltage readings for V_out_.
#+BEGIN_HTML
<object data="js/potentialdivider.html" width='400px' height='500px'></object>
#+END_HTML
** Test It
:PROPERTIES:
:HTML_CONTAINER_CLASS: test
:END:
- Play around with the value of the resistor. We want a resistor value that is high enough to provide a reasonable voltage range, but not too high.
** Badge It - Silver
:PROPERTIES:
:HTML_CONTAINER_CLASS: badge
:END:
- Now you know how to set up an analogue sensor on the GENIE chip, use CircuitWizard to creata a light sensor circuit.
- We'll also need a switch connected to a digital input. You've done this before when you made the digitl die. Have a look at [[https://bournetoinvent.com/projects/8-SC-DigitalDie/pages/2_Lesson.html][this resource]] if you need reminding about digital inputs.
- Once you've completed the inputs for the circuit, take a screenshot.
* Setting up visual outputs
:PROPERTIES:
:HTML_CONTAINER_CLASS: activity
:END:
** Try It
:PROPERTIES:
:HTML_CONTAINER_CLASS: try
:END:
- We're going to need a couple of LEDs (one red and one green) attached to the digital outputs of the GENIE chip.
- Don't forget that LEDs are sensitive to large currents can can 'pop' if the current is too high. A couple of 330Î© resistors should be sufficient to protect them
** Badge It - Gold
:PROPERTIES:
:HTML_CONTAINER_CLASS: badge
:END:
- Create a flowchart program that causes the LEDs to alternately flash on and off when the light levels reaching the LDR are high.
** Badge It - Platinum
:PROPERTIES:
:HTML_CONTAINER_CLASS: badge
:END:
- Create a flowchart program that saves the current light level reaching the LDR in a variable, when the button is pushed.
- The program should wait for a few seconds and then the LEDs should flash on and off if the light level goes above the recorded level.
